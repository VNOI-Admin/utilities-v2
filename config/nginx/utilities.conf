log_format custom '';

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
  set $domain vpn.vnoi.info;

  resolver 1.1.1.1 ipv6=off;

  listen 80;
  server_name 10.1.0.1 vpn-private.vnoi.info;

  proxy_hide_header  Strict-Transport-Security;
  proxy_hide_header  Content-Security-Policy;
  proxy_hide_header  X-Frame-Options;
  proxy_hide_header  X-XSS-Protection;
  proxy_hide_header  X-Content-Type-Options;
  proxy_hide_header  Referrer-Policy;

  proxy_cookie_domain $domain $host;

  location / {
    proxy_pass https://$domain;

    proxy_ssl_server_name on;

    proxy_set_header Host $domain;
    proxy_set_header Referer https://$domain;

    proxy_set_header User-Agent $http_user_agent;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header CF-Connecting-IP $remote_addr;

    proxy_ssl_verify on;
    proxy_ssl_verify_depth 2;
    proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  }
}


server {
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  set_real_ip_from $server_ip;

  access_log /var/log/nginx/api.log; # custom;
  server_name vpn.vnoi.info;

  proxy_set_header Authorization "Bearer $cookie_accessToken";

  location ~ ^/(?<ipaddress>\d+\.\d+\.\d+\.\d+)/(.*) {
    return 404;
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin '*';
      add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
      add_header Content-Type text/plain;
      add_header Content-Length 0;
      return 204;
    }

    rewrite ^/(\d+\.\d+\.\d+\.\d+)/(.*)$ /hls/$2 break;
    proxy_pass http://$1:100;
    proxy_set_header Host $host;

    proxy_set_header User-Agent $http_user_agent;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /user {
    rewrite /user/(.*) /$1 break;
    proxy_pass http://localhost:8001/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /auth {
  rewrite /auth/(.*) /$1 break;
    proxy_pass http://localhost:8002/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /internal {
  rewrite /internal/(.*) /$1 break;
    proxy_pass http://localhost:8003/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /printing {
    rewrite /printing/(.*) /$1 break;
    proxy_pass http://localhost:8004/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  listen 80; # Use certbot to get SSL certificate
}
